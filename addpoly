#include <stdio.h>

#define MAX_TERMS 30

struct poly {
    int coeff;
    int expo;
};

int readpoly(struct poly p[]);
void display(struct poly p[], int t);
int addpoly(struct poly p1[], struct poly p2[], struct poly p3[], int t1, int t2);
void bubblesort(struct poly p[], int t);

int main() {
    int t1, t2, t3;
    struct poly p1[MAX_TERMS], p2[MAX_TERMS], p3[MAX_TERMS];

    printf("Enter the terms of the 1st polynomial:\n");
    t1 = readpoly(p1);
    bubblesort(p1, t1);
    printf("\nThe first polynomial is:\n");
    display(p1, t1);

    printf("Enter the terms of the 2nd polynomial:\n");
    t2 = readpoly(p2);
    bubblesort(p2, t2);
    printf("The second polynomial is:\n");
    display(p2, t2);

    t3 = addpoly(p1, p2, p3, t1, t2);
    printf("The sum of the polynomials is:\n");
    display(p3, t3);

    return 0;
}

int readpoly(struct poly p[]) {
    int t, i;
    printf("\nEnter the total number of terms of the polynomial: ");
    scanf("%d", &t);
    for (i = 0; i < t; i++) {
        printf("\nEnter the coefficient of term %d: ", i + 1);
        scanf("%d", &p[i].coeff);
        printf("Enter the exponent of term %d: ", i + 1);
        scanf("%d", &p[i].expo);
    }
    return t;
}

void bubblesort(struct poly p[], int t) {
    int i, j;
    struct poly temp;
    for (i = 0; i < t - 1; i++) {
        for (j = 0; j < t - i - 1; j++) {
            if (p[j].expo < p[j + 1].expo) {
                temp = p[j];
                p[j] = p[j + 1];
                p[j + 1] = temp;
            }
        }
    }
}

int addpoly(struct poly p1[], struct poly p2[], struct poly p3[], int t1, int t2) {
    int i = 0, j = 0, k = 0;

    while (i < t1 && j < t2) {
        if (p1[i].expo > p2[j].expo) {
            p3[k++] = p1[i++];
        } else if (p1[i].expo < p2[j].expo) {
            p3[k++] = p2[j++];
        } else {
            int sum = p1[i].coeff + p2[j].coeff;
            if (sum != 0) {
                p3[k].coeff = sum;
                p3[k].expo = p1[i].expo;
                k++;
            }
            i++;
            j++;
        }
    }

    while (i < t1) {
        p3[k++] = p1[i++];
    }

    while (j < t2) {
        p3[k++] = p2[j++];
    }

    return k;
}

void display(struct poly p[], int t) {
    if (t == 0) {
        printf("0");
        return;
    }
    for (int i = 0; i < t; i++) {
        if (i > 0 && p[i].coeff > 0) {
            printf(" + ");
        }
        if (p[i].expo == 0) {
            printf("%d", p[i].coeff);
        } else if (p[i].expo == 1) {
            printf("%dx", p[i].coeff);
        } else {
            printf("%dx^%d", p[i].coeff, p[i].expo);
        }
    }
    printf("\n");
}
